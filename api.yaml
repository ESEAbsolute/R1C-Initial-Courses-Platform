openapi: 3.0.3
info:
  title: R1C选课平台API
  description: |
    基于 React + Go + PostgreSQL 的现代化课程管理系统API
    
    ## 功能特色
    - 完整的课程管理系统
    - 学生注册和认证
    - 选课/退课功能
    - 课程搜索和筛选
    - 管理员功能
    
    ## 技术栈
    - 后端: Go + Gin框架
    - 数据库: PostgreSQL
    - 前端: React
    
  version: 1.0.0
  contact:
    name: R1C技术团队
    email: dev@richku.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: 开发环境
  - url: https://api.course-management.com
    description: 生产环境

tags:
  - name: courses
    description: 课程管理相关API
  - name: students
    description: 学生管理相关API
  - name: enrollment
    description: 选课管理相关API
  - name: admin
    description: 管理员功能API

paths:
  /courses:
    get:
      tags: [courses]
      summary: 获取课程列表
      description: 获取系统中所有可用的课程信息，按课程代码排序
      operationId: getCourses
      responses:
        '200':
          description: 成功获取课程列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
              example:
                courses:
                  - id: 1
                    course_code: "COMP1117"
                    course_name: "Computer programming"
                  - id: 2
                    course_code: "COMP2119"
                    course_name: "Data Structures and Algorithms"
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "获取课程列表失败"

    post:
      tags: [courses, admin]
      summary: 添加新课程
      description: 管理员添加新课程到系统
      operationId: addCourse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseInput'
            example:
              course_code: "COMP0000"
              course_name: "Computer Test"
              course_description: "学习计算机程序设计基础"
              credits: 33
              instructor: "张教授"
              semester: "2024春"
              time_slot: "周一3-4节, 周三5-6节"
              course_location: "教学楼A101"
      responses:
        '201':
          description: 课程创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/Course'
                  message:
                    type: string
              example:
                course:
                  id: 9
                  course_code: "COMP0000"
                  course_name: "Computer Test"
                message: "课程添加成功"
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "课程代码和课程名称不能为空"
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /course/{id}:
    get:
      tags: [courses]
      summary: 获取课程详细信息
      description: 根据课程ID获取完整的课程信息
      operationId: getCourseById
      parameters:
        - name: id
          in: path
          required: true
          description: 课程ID
          schema:
            type: integer
            minimum: 1
          example: 7
      responses:
        '200':
          description: 成功获取课程详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseDetail'
              example:
                course:
                  id: 7
                  course_code: "COMP3297"
                  course_name: "Computer Networks"
                  course_description: "Network protocols and distributed systems"
                  credits: 3
                  instructor: "Prof. Wu"
                  semester: "2024 Spring"
                  time_slot: "Wed 10:00-13:00"
                  course_location: "CYC LT6"
        '400':
          description: 无效的课程ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 课程不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /course/search:
    get:
      tags: [courses]
      summary: 搜索课程
      description: 根据关键词搜索课程，支持按课程名称、代码、教师姓名搜索
      operationId: searchCourses
      parameters:
        - name: keyword
          in: query
          required: true
          description: 搜索关键词
          schema:
            type: string
            minLength: 1
          example: "comp"
      responses:
        '200':
          description: 搜索成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
              example:
                courses:
                  - id: 1
                    course_code: "COMP1117"
                    course_name: "Computer programming"
                  - id: 2
                    course_code: "COMP2119"
                    course_name: "Data Structures and Algorithms"
        '400':
          description: 搜索关键词不能为空
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 搜索失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /students:
    get:
      tags: [students]
      summary: 获取学生列表
      description: 获取系统中所有学生的基本信息，按姓名排序
      operationId: getStudents
      responses:
        '200':
          description: 成功获取学生列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      $ref: '#/components/schemas/Student'
              example:
                students:
                  - id: 1
                    name: "张三"
                    email: "zhang.san@connect.hku.hk"
                  - id: 2
                    name: "李四"
                    email: "li.si@connect.hku.hk"
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags: [students, admin]
      summary: 添加新学生
      description: 注册新学生到系统（管理员功能或自助注册）
      operationId: addStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentInput'
            example:
              name: "AAAAAA2"
              email: "test@test.nya"
      responses:
        '201':
          description: 学生注册成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  student:
                    $ref: '#/components/schemas/Student'
                  message:
                    type: string
              example:
                student:
                  id: 7
                  name: "AAAAAA2"
                  email: "test@test.nya"
                message: "学生添加成功"
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "姓名和邮箱不能为空"
        '500':
          description: 添加学生失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /student/{id}:
    get:
      tags: [students, enrollment]
      summary: 获取学生选课信息
      description: 根据学生ID获取该学生的基本信息和所选课程列表
      operationId: getStudentCourses
      parameters:
        - name: id
          in: path
          required: true
          description: 学生ID
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: 成功获取学生选课信息
          content:
            application/json:
              schema:
                type: object
                properties:
                  student:
                    $ref: '#/components/schemas/Student'
                  courses:
                    type: array
                    items:
                      $ref: '#/components/schemas/StudentCourse'
                  total_count:
                    type: integer
                    description: 选课总数
              example:
                student:
                  id: 1
                  name: "张三"
                  email: "zhang.san@connect.hku.hk"
                courses:
                  - course_id: 1
                    course_code: "COMP1117"
                    course_name: "Computer programming"
                  - course_id: 2
                    course_code: "COMP2119"
                    course_name: "Data Structures and Algorithms"
                total_count: 2
        '400':
          description: 无效的学生ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 学生不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 查询学生信息失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /students/{studentId}/courses/{courseId}:
    post:
      tags: [enrollment]
      summary: 学生选课
      description: 为指定学生选择指定课程
      operationId: enrollStudentInCourse
      parameters:
        - name: studentId
          in: path
          required: true
          description: 学生ID
          schema:
            type: integer
            minimum: 1
          example: 1
        - name: courseId
          in: path
          required: true
          description: 课程ID
          schema:
            type: integer
            minimum: 1
          example: 4
      responses:
        '200':
          description: 选课成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "选课成功"
        '400':
          description: 选课失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "学生已经选择过该课程"
        '404':
          description: 学生或课程不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags: [enrollment]
      summary: 学生退课
      description: 为指定学生退选指定课程
      operationId: unenrollStudentFromCourse
      parameters:
        - name: studentId
          in: path
          required: true
          description: 学生ID
          schema:
            type: integer
            minimum: 1
          example: 1
        - name: courseId
          in: path
          required: true
          description: 课程ID
          schema:
            type: integer
            minimum: 1
          example: 4
      responses:
        '200':
          description: 退课成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "退课成功"
        '400':
          description: 退课失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "学生未选择该课程"
        '404':
          description: 学生或课程不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /courses/{courseId}/students:
    delete:
      tags: [admin, enrollment]
      summary: 批量移除学生
      description: 将所有学生从指定课程中移除（管理员功能，用于课程取消等场景）
      operationId: removeAllStudentsFromCourse
      parameters:
        - name: courseId
          in: path
          required: true
          description: 课程ID
          schema:
            type: integer
            minimum: 1
          example: 4
      responses:
        '200':
          description: 批量移除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "已成功将所有学生从该课程中移除"
        '404':
          description: 课程不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "课程不存在"
        '500':
          description: 清空课程选课记录失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Course:
      type: object
      required: [id, course_code, course_name]
      properties:
        id:
          type: integer
          description: 课程唯一标识符
          example: 1
        course_code:
          type: string
          description: 课程代码
          pattern: '^[A-Z]{4}[0-9]{4}$'
          example: "COMP1117"
        course_name:
          type: string
          description: 课程名称
          maxLength: 200
          example: "Computer programming"
      description: 课程基本信息

    CourseDetail:
      allOf:
        - $ref: '#/components/schemas/Course'
        - type: object
          properties:
            course_description:
              type: string
              description: 课程描述
              example: "学习计算机程序设计基础"
            credits:
              type: integer
              description: 学分
              minimum: 1
              maximum: 8
              default: 3
              example: 3
            instructor:
              type: string
              description: 教师姓名
              maxLength: 100
              example: "张教授"
            semester:
              type: string
              description: 学期
              maxLength: 20
              example: "2024春"
            time_slot:
              type: string
              description: 上课时间
              maxLength: 100
              example: "周一3-4节, 周三5-6节"
            course_location:
              type: string
              description: 上课地点
              maxLength: 100
              example: "教学楼A101"
      description: 课程完整信息

    CourseInput:
      type: object
      required: [course_code, course_name]
      properties:
        course_code:
          type: string
          description: 课程代码
          pattern: '^[A-Z]{4}[0-9]{4}$'
          example: "COMP0000"
        course_name:
          type: string
          description: 课程名称
          maxLength: 200
          example: "Computer Test"
        course_description:
          type: string
          description: 课程描述
          example: "学习计算机程序设计基础"
        credits:
          type: integer
          description: 学分
          minimum: 1
          maximum: 8
          default: 3
          example: 33
        instructor:
          type: string
          description: 教师姓名
          maxLength: 100
          example: "张教授"
        semester:
          type: string
          description: 学期
          maxLength: 20
          example: "2024春"
        time_slot:
          type: string
          description: 上课时间
          maxLength: 100
          example: "周一3-4节, 周三5-6节"
        course_location:
          type: string
          description: 上课地点
          maxLength: 100
          example: "教学楼A101"
      description: 添加课程请求参数

    Student:
      type: object
      required: [id, name, email]
      properties:
        id:
          type: integer
          description: 学生唯一标识符
          example: 1
        name:
          type: string
          description: 学生姓名
          maxLength: 100
          example: "张三"
        email:
          type: string
          format: email
          description: 学生邮箱地址
          maxLength: 100
          example: "zhang.san@connect.hku.hk"
      description: 学生基本信息

    StudentInput:
      type: object
      required: [name, email]
      properties:
        name:
          type: string
          description: 学生姓名
          maxLength: 100
          example: "AAAAAA2"
        email:
          type: string
          format: email
          description: 学生邮箱地址
          maxLength: 100
          example: "test@test.nya"
      description: 添加学生请求参数

    StudentCourse:
      type: object
      required: [course_id, course_code, course_name]
      properties:
        course_id:
          type: integer
          description: 课程ID
          example: 1
        course_code:
          type: string
          description: 课程代码
          example: "COMP1117"
        course_name:
          type: string
          description: 课程名称
          example: "Computer programming"
      description: 学生选课信息

    Error:
      type: object
      required: [error]
      properties:
        error:
          type: string
          description: 错误信息描述
          example: "查询失败"
      description: 错误响应格式

  responses:
    BadRequest:
      description: 请求参数错误
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "请求参数格式错误"

    NotFound:
      description: 资源不存在
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "资源不存在"

    InternalServerError:
      description: 服务器内部错误
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "服务器内部错误"

  parameters:
    StudentId:
      name: studentId
      in: path
      required: true
      description: 学生ID
      schema:
        type: integer
        minimum: 1

    CourseId:
      name: courseId
      in: path
      required: true
      description: 课程ID
      schema:
        type: integer
        minimum: 1

    SearchKeyword:
      name: keyword
      in: query
      required: true
      description: 搜索关键词
      schema:
        type: string
        minLength: 1